RPZ-IR-Sensor基板用サンプルプログラム

【概要】
接続されたBME280からI2Cで温度、湿度、気圧を、TSL2561から照度を取得して
表示するプログラムです。Raspbian Jessieでコンパイルしたバイナリとソースファイル一式
および、Python3で記述したスクリプトです。

I2Cを使用しますので、あらかじめ メニュー＞設定＞Raspberry Piの設定＞
インターフェースよりI2Cを有効にしてください。
コマンドから設定する場合はsudo raspi-configコマンドをご利用ください。

【更新履歴】
2018/1/18 TSL2561センサーの個体差によってA/D変換時間がばらつくため、ウェイトタイムを調整しました。


【ファイル構成 Python3】
rpz_sensor.py : 温度、湿度、気圧、照度を測定、ログに残すスクリプト
bme280i2c.py : BME280をI2Cで制御するモジュール
tsl2561.py : TSL2561をI2Cで制御するモジュール

【使い方 Python3】
ターミナルを開いて以下のように実行してください。
./bme280i2c.py
./tsl2561.py
BME280とTSL2561の取得データが表示されます。

ログに残したり、両方のセンサを制御できるrpz_sensor.pyスクリプトはdocoptパッケージを
使用しています。以下のコマンドでインストールしてお使いください。
sudo pip3 install docopt
./rpz_sensor.py

ターミナル上に取得した温度、湿度、気圧、照度が表示されます。基板上のBME280(アドレス0x77)のほか、
ピンヘッダ経由でBME280(アドレス0x76)を接続している場合はそちらの測定結果も取得します。

レジスタのデータなどより詳細な情報を表示させる場合は-vオプションを利用してください。
./rpz_sensor.py -v

-lオプションに続けてファイル名を入力すると、そのファイルに時刻、気温、湿度、気圧、照度が
ログとして残せます。既に作成済みのログファイルを指定すると、さらに追加されます。
ログファイルはテキストエディタや表計算ソフトなどで開いてグラフ化できます。
cronなどと組み合わせて定期的にデータを取得する用途に使用できます。
./rpz_sensor.py -l logfile.csv


【ファイル構成 C++】
rpz-sensor : バイナリ実行ファイル
main.cpp : メインルーチン
BME280I2C.cpp : BME280センサーを制御するクラス 
BME280I2C.h : BME280センサーを制御するクラスのヘッダーファイル
TSL2561I2C.cpp : TSL2561センサーを制御するクラス 
TSL2561I2C.h : TSL2561センサーを制御するクラスのヘッダーファイル
Makefile : g++用メイクファイル

【使い方 C++】
ターミナルを開いて以下のように実行してください。
./rpz-sensor

ターミナル上に取得した温度、湿度、気圧、照度が表示されます。基板上のBME280(アドレス0x77)のほか、
ピンヘッダ経由でBME280(アドレス0x76)を接続している場合はそちらの測定結果も取得します。

レジスタのデータなどより詳細な情報を表示させる場合は-vオプションを利用してください。
./rpz-sensor -v

-lオプションに続けてファイル名を入力すると、そのファイルに時刻、気温、湿度、気圧、照度が
ログとして残せます。既に作成済みのログファイルを指定すると、さらに追加されます。
ログファイルはテキストエディタや表計算ソフトなどで開いてグラフ化できます。
cronなどと組み合わせて定期的にデータを取得する用途に使用できます。
./rpz-sensor -l logfile.csv
